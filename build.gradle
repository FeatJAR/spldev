def registerTaskForRepo(taskName) {
    tasks.register(taskName) {
        gradle.includedBuilds.each { build ->
            if (build.projectDir.toPath().resolve('build.gradle').toFile().text.contains('id \'de.featjar.')
            && !build.projectDir.name.equals('all')) {
                dependsOn gradle.includedBuild(build.name).task(":$taskName")
            }
        }
    }
}

def registerTaskForEveryRepo(taskName) {
    tasks.register(taskName) {
        gradle.includedBuilds.each { build ->
            if (build.projectDir.name.equals('gradle-plugins') || 
                build.projectDir.toPath().resolve('build.gradle').toFile().text.contains('id \'de.featjar.')) {
                dependsOn gradle.includedBuild(build.name).task(":$taskName")
            }
        }
    }
}

// pass common tasks through to included builds
['test', 'licenseFormatMain', 'licenseFormatTest', 'spotlessApply', 'publishToMavenLocal', 'release'].each { registerTaskForRepo it }

['assemble', 'build', 'clean', 'currentVersion'].each { registerTaskForEveryRepo it }

// release with:
// eval $(ssh-agent); ssh-add ~/.ssh/id_rsa; gradle release
